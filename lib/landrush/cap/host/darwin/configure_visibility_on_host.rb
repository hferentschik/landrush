module Landrush
  module Cap
    module Darwin
      class ConfigureVisibilityOnHost
        class << self
          attr_writer :sudo, :config_dir

          def configure_visibility_on_host(env, _ip, tlds)
            @env = env

            tlds.each do |tld|
              if contents_match?(tld)
                info "Host DNS resolver config for TLD '#{tld}' looks good."
              else
                info "Need to create /etc/resolver entry for TLD '#{tld}'"
                write_config!(tld)
              end
            end
          end

          private

          def sudo
            @sudo ||= 'sudo'
          end

          def config_dir
            @config_dir ||= '/etc/resolver'
          end

          def config_file(tld)
            File.join(config_dir, tld)
          end

          def info(msg)
            @env.ui.info("[landrush] #{msg}") unless @env.nil?
          end

          def desired_contents
            <<-EOS.gsub(/^            /, '')
            # Generated by landrush, a vagrant plugin
            nameserver 127.0.0.1
            port #{Server.port}
            EOS
          end

          def contents_match?(tld)
            config_file = config_file(tld)
            File.exist?(config_file) && File.read(config_file) == desired_contents
          end

          def write_config!(tld)
            info 'Momentarily using sudo to put the host config in place...'
            system "#{sudo} mkdir #{config_dir}" unless File.directory?(config_dir)
            Tempfile.open('vagrant_landrush_host_config') do |f|
              f.write(desired_contents)
              f.close
              system "#{sudo} cp #{f.path} #{config_file(tld)}"
              system "#{sudo} chmod 644 #{config_file(tld)}"
            end
          end
        end
      end
    end
  end
end
